@using Bog.Api.Domain.Values
@model Bog.Client.Domain.Models.PaginatedContentResult

@{
    ViewData["Title"] = "Home page";
    var allContent = Model.Content.ToArray();
}


@foreach (var content in allContent)
{
    //var link = content.Links?.FirstOrDefault(link => link.Relation == LinkRelValueObject.SELF);
    var link = Url.Action("GetArticle", new { 
        contentId = content.Id, 
        title= content.Title?.Trim().Replace(' ', '-')
    });

    <div>
        <a href="@(link)"><span>@(content.Title)</span></a>
        <span>@(content.Description)</span>
        <span>@($"by {content.Author}")</span>
        <span>@(content.Updated.HasValue? $"Updated - {content.Updated.Value:d}": $"Created - {content.Created:d}")</span>
    </div>
}

@if (Model.Page > 0)
{
    var backLink = Url.Action("GetPaginatedContent", new { page = Model.Page - 1 });
    <a href="@(backLink)">previous</a>
}

@if (allContent.Any())
{
    var forwardLink = Url.Action("GetPaginatedContent", new { page = Model.Page + 1 });
    <a href="@(forwardLink)">next</a>
}